module Examples
  module LinkHelpers
    def dsfr_link_to_normal
      %(= dsfr_link_to 'A regular hyperlink', '#')
    end

    def dsfr_link_to_inverse
      %(= dsfr_link_to 'An inverse hyperlink', '#', inverse: true)
    end

    def dsfr_link_to_muted
      %(= dsfr_link_to 'A muted hyperlink', '#', muted: true)
    end

    def dsfr_link_other_styles
      <<~LINKS
        p
          = dsfr_link_to 'A hyperlink without an underline', '#', no_underline: true

        p
          = dsfr_link_to 'A hyperlink without a visited state', '#', no_visited_state: true

        p
          = dsfr_link_to 'A text-coloured hyperlink', '#', text_colour: true
      LINKS
    end

    def dsfr_button_to_normal
      %(= dsfr_button_to 'A button', '#')
    end

    def dsfr_button_link_to_normal
      %(= dsfr_button_link_to 'A link styled like a button', '#')
    end

    def dsfr_button_other_styles
      <<~BUTTONS
        .fr-btn-group
          = dsfr_button_link_to 'A disabled button', '#', disabled: true
          = dsfr_button_link_to 'A secondary button', '#', secondary: true
          = dsfr_button_link_to 'A warning button', '#', warning: true
      BUTTONS
    end

    def dsfr_link_classes_multiple
      <<~LINK
        p
          = link_to_if(true,
            'A regular link generated by Rails',
            '#',
            class: dsfr_link_classes)

        p
          = link_to_if(true,
            'A muted and not underlined link generated by Rails',
            '#',
            class: dsfr_link_classes(:muted, :no_underline))
      LINK
    end
  end
end
