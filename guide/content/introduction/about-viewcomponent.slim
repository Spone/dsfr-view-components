---
title: About ViewComponent
---

p
  | #{govuk_link_to("ViewComponent", viewcomponent_link).html_safe} is a
    framework for Ruby on Rails that lets us build and share reusable
    components.

p
  | View components are:

ul.govuk-list.govuk-list--bullet
  li easy to test, both the logic and rendered HTML can be examined individually
  li easier to understand than partials as they are backed by a Ruby object
  li incredibly efficient, #{govuk_link_to("ten times faster than partials", "https://viewcomponent.org/#performance").html_safe}

h2.govuk-heading-l How they work

p
  | View components are usually placed in <code>app/components</code> and usually consist of
    a Ruby file and a template file. They can be extended to provide custom JavaScript and CSS
    too, but this library doesn't do it.

p
  | A very basic view component might look like this:

.code-sample
  pre
    code.highlight.language-ruby
      | # in app/components/sample_component.rb
        class SampleComponent < ViewComponent::Base
          attr_reader :title

          def initialize(title:, name:)
            @title = title
            @name  = name
          end

        private

          def greeting
            "Hi there \#{name}"
          end
        end

.code-sample
  pre
    code.highlight.language-slim
      | / in app/components/sample_component.slim
        .sample-component
          h2 = title

          p.greeting = greeting


p
  | You can then use it from a template by passing an object to <code>render</code>:

.code-sample
  pre
    code.highlight.language-slim
      | = render(SampleComponent.new(title: "Welcome!", name: "Rosemary"))
